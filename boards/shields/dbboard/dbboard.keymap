#include <behaviors.dtsi>
/* Include all behavior includes needed */
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>

#define LAYER_Base 0
#define LAYER_Nav 1
#define LAYER_Num 2
#define LAYER_Sym 3
#define LAYER_Func 4
#define LAYER_Meta 5
#define LAYER_OneHand1 6
#define LAYER_OneHand2 7

macros {
    bt_0: bt_0 {
        label = "BT_0";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings
            = <&out OUT_BLE>,
              <&bt BT_SEL 0>;
    };
    bt_1: bt_1 {
        label = "BT_1";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings
            = <&out OUT_BLE>,
              <&bt BT_SEL 1>;
    };
    bt_2: bt_2 {
        label = "BT_2";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings
            = <&out OUT_BLE>,
              <&bt BT_SEL 2>;
    };
    bt_3: bt_3 {
        label = "BT_3";
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings
            = <&out OUT_BLE>,
              <&bt BT_SEL 3>;
    };
};

/ {
    macros {

        ohe: ohe {
            label = "&OHE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            bindings = <&rgb_ug RGB_ON>
                , <&rgb_ug RGB_EFF>
                , <&tog 6>;
        };

        ohl: ohl {
            label = "&OHL";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            bindings = <&rgb_ug RGB_OFF>
                , <&rgb_ug RGB_EFR>
                , <&to 0>;
        };
    };
};

/* Automatically generated behavior definitions */
/ {
    behaviors {

        // Left hand mod-tap
        lh_hrm: lh_hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
            flavor = "tap-preferred";
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            retro-tap;
            hold-trigger-key-positions = <5 6 7 8 9 21 20 19 18 17 16 29 28 30 31 32 45 33 44 43 42 40 41 59 58 60 61 62 63 75 76 77 78 79 73 74 69 70>;
        };

        // Right hand mod-tap
        rh_hrm: rh_hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
            flavor = "tap-preferred";
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            retro-tap;
            hold-trigger-key-positions = <69 70 74 73 64 65 66 67 68 51 39 27 15 4 14 26 38 50 49 25 37 13 3 2 12 24 36 48 47 35 23 11 1 0 10 34 22 46>;
        };

        // Left hand home row shift
        lh_hrs: lh_hrs {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            bindings = <&kp>, <&kp>;
            flavor = "balanced";
            quick-tap-ms = <150>;
            retro-tap;
            hold-trigger-key-positions = <33 29 40 28 58 59 41 42 30 32 31 43 60 61 62 45 44>;
        };

        // Right hand home row shfit
        rh_hrs: rh_hrs {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            bindings = <&kp>, <&kp>;
            flavor = "balanced";
            quick-tap-ms = <150>;
            retro-tap;
            hold-trigger-key-positions = <23 24 26 27 25 35 36 37 38 39 51 50 49 47 48>;
        };

        // Custom layer-tap
        clt: clt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            bindings = <&mo>, <&kp>;
            flavor = "tap-preferred";
            retro-tap;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";


        layer_Base {
            bindings = <
      &ohe          &kp N1          &kp N2           &kp N3           &kp N4  &kp N5                                                                           &kp N6           &kp N7           &kp N8          &kp N9          &kp N0     &none
   &kp TAB           &kp Q           &kp W            &kp F            &kp P   &kp B                                                                            &kp J            &kp L            &kp U           &kp Y        &kp SEMI  &kp BSLH
 &kp LCTRL  &lh_hrm LALT A  &lh_hrm LGUI R  &lh_hrm LCTRL S  &lh_hrs LSHFT T   &kp G                                                                            &kp M  &rh_hrs LSHFT N  &rh_hrm LCTRL E  &rh_hrm LGUI I  &rh_hrm LALT O   &kp SQT
 &kp LSHFT           &kp Z           &kp X            &kp C            &kp D   &kp V        &mo 6       &mo 7    &kp LALT  &kp LALT    &kp LGUI     &kp LCTRL   &kp K            &kp H        &kp COMMA         &kp DOT        &kp FSLH     &none
     &sl 5           &none           &none            &none            &none          &clt 2 BSPC  &clt 3 RET  &caps_word   &kp ESC  &clt 4 TAB  &clt 1 SPACE                    &none            &none           &none           &none     &sl 5
            >;
        };

        layer_Nav {
            bindings = <
     &none     &none     &none         &none           &none   &none                                                                 &none           &none         &none            &none   &none   &none
   &kp TAB     &none     &none         &none           &none   &none                                                              &kp HOME       &kp PG_DN     &kp PG_UP          &kp END   &none   &none
 &kp LCTRL  &kp LALT  &kp LGUI     &kp LCTRL       &kp LSHFT   &none                                                              &kp LEFT        &kp DOWN        &kp UP        &kp RIGHT   &none   &none
 &kp LSHFT     &none     &none  &msc SCRL_UP  &msc SCRL_DOWN   &none     &none     &none     &none   &none   &none   &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT   &none   &none
     &none     &none     &none         &none           &none          &kp BSPC  &mkp MB1  &mkp MB2   &none   &none   &none                           &none         &none            &none   &none   &none
            >;
        };

        layer_Num {
            bindings = <
     &none     &none     &none      &none      &none                                                                           &none   &none   &none      &none    &none
     &none    &kp N1    &kp N2     &kp N3     &kp N4  &kp N5                                                          &none    &none   &none   &none      &none    &none
   &kp TAB     &none     &none      &none      &none   &none                                                       &kp LBKT   &kp N7  &kp N8  &kp N9   &kp RBKT    &none
 &kp LCTRL  &kp LALT  &kp LGUI  &kp LCTRL  &kp LSHFT   &none                                                        &kp SQT   &kp N4  &kp N5  &kp N6  &kp EQUAL  &kp SQT
 &kp LSHFT     &none     &none      &none      &none   &none   &none   &none   &none    &none      &none   &none  &kp GRAVE   &kp N1  &kp N2  &kp N3   &kp BSLH    &none
     &none     &none     &none      &none      &none           &none   &none   &none  &kp DOT  &kp MINUS  &kp N0             &kp DOT  &kp N0   &none      &none    &none
            >;
        };

        layer_Sym {
            bindings = <
     &none    &kp N0    &kp N9     &kp N8     &kp N7  &kp N6                                                                          &none        &none       &none       &none          &none        &none
   &kp TAB     &none     &none      &none      &none   &none                                                                   &kp LS(LBKT)   &kp LS(N7)  &kp LS(N8)  &kp LS(N9)   &kp LS(RBKT)        &none
 &kp LCTRL  &kp LALT  &kp LGUI  &kp LCTRL  &kp LSHFT   &none                                                                    &kp LS(SQT)   &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp LS(EQUAL)  &kp LS(SQT)
 &kp LSHFT     &none     &none      &none      &none   &none   &none   &none   &none        &none          &none       &none  &kp LS(GRAVE)   &kp LS(N1)  &kp LS(N2)  &kp LS(N3)   &kp LS(BSLH)        &none
     &none     &none     &none      &none      &none           &none   &none   &none  &kp LS(DOT)  &kp LS(MINUS)  &kp LS(N0)                 &kp LS(DOT)  &kp LS(N0)       &none          &none        &none
            >;
        };

        layer_Func {
            bindings = <
     &none    &none   &none   &none   &none       &none                                                     &none      &none      &none     &none     &none   &none
   &kp TAB  &kp F12  &kp F7  &kp F8  &kp F9     &kp DEL                                                     &none      &none      &none     &none     &none   &none
 &kp LCTRL  &kp F11  &kp F4  &kp F5  &kp F6    &kp CAPS                                                     &none  &kp LSHFT  &kp LCTRL  &kp LGUI  &kp LALT   &none
 &kp LSHFT  &kp F10  &kp F1  &kp F2  &kp F3  &caps_word     &none   &none   &none   &none   &none   &none   &none      &none      &none     &none     &none   &none
     &none    &none   &none   &none   &none              &kp BSPC   &none   &none   &none   &none   &none              &none      &none     &none     &none   &none
            >;
        };

        layer_Meta {
            bindings = <
  &bt BT_CLR   &none   &none   &none   &none                                                                   &none   &none   &none   &none        &none
       &none   &none   &none   &none   &none   &bt_0                                                   &bt_0   &none   &none   &none   &none        &none
       &none   &none   &none   &none   &none   &bt_1                                                   &bt_1   &none   &none   &none   &none        &none
 &bootloader   &none   &none   &none   &none   &bt_2                                                   &bt_2   &none   &none   &none   &none  &bootloader
       &none   &none   &none   &none   &none   &bt_3   &none   &none   &none   &none   &none   &none   &bt_3   &none   &none   &none   &none        &none
       &none   &none   &none   &none   &none           &none   &none   &none   &none   &none   &none           &none   &none   &none   &none        &none
            >;
        };

        layer_OneHand1 {
            bindings = <
      &ohl    &kp N1    &kp N2  &kp N3     &kp N4  &kp N5                                                          &none   &none   &none   &none   &none   &none
   &kp TAB     &kp Q     &kp W   &kp F      &kp P   &kp B                                                          &none   &none   &none   &none   &none   &none
 &kp LCTRL     &kp A     &kp R   &kp S      &kp T   &kp G                                                          &none   &none   &none   &none   &none   &none
 &kp LSHFT     &kp Z     &kp X   &kp C      &kp D   &kp V     &kp BSPC    &none    &none   &none   &none   &none   &none   &none   &none   &none   &none   &none
     &none  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT          &lt 7 SPACE  &kp RET  &kp ESC   &none   &none   &none           &none   &none   &none   &none   &none
            >;
        };

        layer_OneHand2 {
            bindings = <
   &kp ESC    &kp N0   &kp N9     &kp N8  &kp N7  &kp N6                                                   &none   &none   &none   &none   &none   &none
   &kp TAB  &kp SEMI    &kp Y      &kp U   &kp L   &kp J                                                   &none   &none   &none   &none   &none   &none
 &kp LCTRL     &kp O    &kp I      &kp E   &kp N   &kp M                                                   &none   &none   &none   &none   &none   &none
 &kp LSHFT  &kp FSLH  &kp DOT  &kp COMMA   &kp H   &kp K   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none
     &none     &none    &none      &none   &none           &none   &none   &none   &none   &none   &none           &none   &none   &none   &none   &none
            >;
        };

    };
};
